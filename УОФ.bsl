//////////////////////////////////////////////////////////////////////////////////
//
//	Модуль Условного Оформления Формы
//	Версия: 1.0.0.4 от 03.10.2025
//	
//	Автор и разработчик: Раковиц Владимир
//	e-mail: rakovitc@gmail.com
//	https://github.com/vogrosty/UOF
//	
//////////////////////////////////////////////////////////////////////////////////

#Область УсловноеОформление

// Возвращает добавленную группу в элемент оформления
//
// Параметры:
//  ЭлементОформления - ЭлементУсловногоОформления - УО формы.
//
//  ТипГруппы - Строка - тип добавляемой группы (соответствует ТипГруппыЭлементовОтбораКомпоновкиДанных)
//
// Возвращаемое значение:
//  ГруппаЭлементовОтбора  - созданная группа отбора
// 
Функция ДобавитьГруппуОтбора(ЭлементОформления, ТипГруппы) Экспорт 
	
	// Группа для условий отбора
 	ГруппаЭлементовОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
 	ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных[ТипГруппы];
	
	Возврат ГруппаЭлементовОтбора;
	
КонецФункции

// Добавляет элемент отбора в группу с указанным видом сравнения и значением сравнения
//
// Параметры:
//  ГруппаЭлементовОтбора - ГруппаЭлементовОтбора - группа для УО формы.
//
//  ИмяПоля - Строка - Имя поля, например "Таблица.Поле" 
//
//  ВидСравненияДляПоля - Строка - вид сравнения (соответствует ВидСравненияКомпоновкиДанных)
//
//  ПравоеЗначение - Любой тип - правое значение сравнения
//
//  ЭтоСравнениеСПКД - Булево - флаг, указывающий что правое значение - это поле компоновки данных
//
Процедура ДобавитьЭлементОтбораВГруппу(ГруппаЭлементовОтбора, ИмяПоля, ВидСравненияДляПоля, ПравоеЗначение, ЭтоСравнениеСПКД = Ложь) Экспорт 
	
	Если ЭтоСравнениеСПКД Тогда 
		ПравоеЗначение = Новый ПолеКомпоновкиДанных(ПравоеЗначение);
	КонецЕсли;	
	
	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля); // имя поля
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных[ВидСравненияДляПоля]; // либо задаем свой
	ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;
	ЭлементОтбора.Использование = Истина;
	
КонецПроцедуры  

// Добавляет элемент отбора с указанным видом сравнения и значением сравнения
//
// Параметры:
//  ЭлементОформления - ЭлементОформления - ЭлементОформления УО формы.
//
//  ИмяПоля - Строка - Имя поля, например "Таблица.Поле" 
//
//  ВидСравненияДляПоля - Строка - вид сравнения (соответствует ВидСравненияКомпоновкиДанных)
//
//  ПравоеЗначение - Любой тип - правое значение сравнения
//
Процедура ДобавитьЭлементОтбора(ЭлементОформления, ИмяПоля, ВидСравненияДляПоля, ПравоеЗначение, ЭтоСравнениеСПКД = Ложь) Экспорт 
	
	Если ЭтоСравнениеСПКД Тогда 
		ПравоеЗначение = Новый ПолеКомпоновкиДанных(ПравоеЗначение);
	КонецЕсли;	
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля); // имя поля
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных[ВидСравненияДляПоля]; // либо задаем свой
	ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;
	ЭлементОтбора.Использование = Истина;
	
КонецПроцедуры


// Установаливает цвет фона для элемента оформления
//
// Параметры:
//  ЭлементОформления - ЭлементУсловногоОформления - УО формы.
//
//  Цвет - WebЦвета - Устанавливаемый цвет фона 
//
Процедура УстановитьЦветФонаЭлементуОформления(ЭлементОформления, Цвет) Экспорт 
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Цвет);
	ЭлементОформления.Использование = Истина;
	
КонецПроцедуры  

// Установаливает произвольное свойство для элемента оформления
//
// Параметры:
//  ЭлементОформления - ЭлементУсловногоОформления - УО формы.
//
//  Цвет - WebЦвета - Устанавливаемый цвет фона 
//
Процедура УстановитьСвойствоЭлементуОформления(ЭлементОформления, Свойство, ЗначениеСвойства) Экспорт 
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра(Свойство, ЗначениеСвойства);
	ЭлементОформления.Использование = Истина;
	
КонецПроцедуры

// Добавляет поля условного оформления элементу оформления в указанную таблицу
//
// Параметры:
//  ЭлементОформления - ЭлементОформления - элемент оформления УО формы.
//
//  ИмяТаблицы - Строка - Имя таблицы формы 
//
//  ИменаПолей - Строка - Имена полей таблицы формы, разделенные запятыми 
//
Процедура ДобавитьПоляТаблицыУсловногоОформления(ЭлементОформления, ИмяТаблицы, ИменаПолей) Экспорт
	
	МассивПолей = СтрРазделить(ИменаПолей, ",");
	Для Каждого ПолеОформления Из МассивПолей Цикл 
		ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(СтрШаблон("%1%2", ИмяТаблицы, ПолеОформления));
		ПолеЭлемента.Использование = Истина;
	КонецЦикла;	
	
КонецПроцедуры 

// Добавляет поля условного оформления элементу оформления в указанную таблицу из коллекции элментов формы
//
// Параметры:
//  Элементы - Элементы - Коллекция элементов формы.
//
//  ЭлементОформления - ЭлементОформления - элемент оформления УО формы.
//
//  ИмяТаблицы - Строка - Имя таблицы формы 
//
//  ИменаПолей - Строка - Имена полей таблицы формы, разделенные запятыми 
//
Процедура ДобавитьПоляТаблицыУсловногоОформленияИзЭлементов(Элементы, ЭлементОформления, ИмяТаблицы, ИменаПолей) Экспорт
	
	МассивПолей = СтрРазделить(ИменаПолей, ",");
	
	Для Каждого ПолеОформления Из МассивПолей Цикл 
		ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы[СтрШаблон("%1%2", ИмяТаблицы, ПолеОформления)].Имя);
		ПолеЭлемента.Использование = Истина;
	КонецЦикла;	
	
КонецПроцедуры

// Добавляет все поля условного оформления элементу оформления из указанной таблицы
//
// Параметры:
//  ЭлементОформления - ЭлементОформления - элемент оформления УО формы.
//
//  Форма - ЭтаФорма - форма управляемого приложения.
//
//  ИмяТаблицы - Строка - Имя таблицы формы 
//
//  ОбъединитьИмяИПоле - Булево - Флаг, определяет нужно ли добавить к каждому полю имя таблицы 
//
Процедура ДобавитьВсеПоляТаблицыУсловногоОформления(ЭлементОформления, Форма, ИмяТаблицы, ОбъединитьИмяИПоле = Истина) Экспорт
	
	РеквизитыТаблицы = Форма.ПолучитьРеквизиты(ИмяТаблицы);
	
	Для каждого Реквизит из РеквизитыТаблицы Цикл
		
		ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
		
		Если ОбъединитьИмяИПоле Тогда
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(СтрШаблон("%1%2", ИмяТаблицы, Реквизит.Имя));
		Иначе	
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Реквизит.Имя);
		КонецЕсли;
		
		ПолеЭлемента.Использование = Истина;
		
	КонецЦикла;
	
КонецПроцедуры 



#КонецОбласти //УсловноеОформление 
